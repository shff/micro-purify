{"version":3,"file":"purifycss.js","sources":["../src/utils/parse.js","../src/utils/compile.js","../src/utils/FileUtil.js","../src/purifycss.js"],"sourcesContent":["/*\n\nCode extracted from https://github.com/reworkcss/css\n\n\n\n(The MIT License)\n\nCopyright (c) 2012 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nexport default function(css, options) {\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(\"\\n\");\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   */\n\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node\n   */\n\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string\n   */\n\n  Position.prototype.content = css;\n\n  /**\n   * Error `msg`.\n   */\n\n  var errorsList = [];\n\n  function error(msg) {\n    var err = new Error(\n      options.source + \":\" + lineno + \":\" + column + \": \" + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    var rulesList = rules();\n\n    return {\n      type: \"stylesheet\",\n      stylesheet: {\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) != \"}\" && (node = atrule() || rule())) {\n      if (node !== false) {\n        rules.push(node);\n        comments(rules);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if (\"/\" != css.charAt(0) || \"*\" != css.charAt(1)) return;\n\n    var i = 2;\n    while (\n      \"\" != css.charAt(i) &&\n      (\"*\" != css.charAt(i) || \"/\" != css.charAt(i + 1))\n    )\n      ++i;\n    i += 2;\n\n    if (\"\" === css.charAt(i - 1)) {\n      return error(\"End of comment missing\");\n    }\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n\n    return pos({\n      type: \"comment\",\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    /* @fix Remove all comments from selectors\n     * http://ostermiller.org/findcomment.html */\n    return m[0]\n      .trim()\n      .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, \"\")\n      .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n        return m.replace(/,/g, \"\\u200C\");\n      })\n      .split(/\\s*(?![^(]*\\)),\\s*/)\n      .map(function(s) {\n        return s.replace(/\\u200C/g, \",\");\n      });\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!prop) return;\n    prop = prop[0].trim();\n\n    // :\n    if (!match(/^:\\s*/)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n\n    var ret = pos({\n      type: \"declaration\",\n      property: prop.replace(commentre, \"\"),\n      value: val ? val[0].trim().replace(commentre, \"\") : \"\"\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return error(\"missing '{'\");\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    if (!close()) return error(\"missing '}'\");\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: \"keyframe\",\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return error(\"@keyframes missing name\");\n    var name = m[1];\n\n    if (!open()) return error(\"@keyframes missing '{'\");\n\n    var frame;\n    var frames = comments();\n    while ((frame = keyframe())) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) return error(\"@keyframes missing '}'\");\n\n    return pos({\n      type: \"keyframes\",\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = m[1].trim();\n\n    if (!open()) return error(\"@supports missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@supports missing '}'\");\n\n    return pos({\n      type: \"supports\",\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse host.\n   */\n\n  function athost() {\n    var pos = position();\n    var m = match(/^@host\\s*/);\n\n    if (!m) return;\n\n    if (!open()) return error(\"@host missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@host missing '}'\");\n\n    return pos({\n      type: \"host\",\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = m[1].trim();\n\n    if (!open()) return error(\"@media missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@media missing '}'\");\n\n    return pos({\n      type: \"media\",\n      media: media,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse custom-media.\n   */\n\n  function atcustommedia() {\n    var pos = position();\n    var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) return;\n\n    return pos({\n      type: \"custom-media\",\n      name: m[1].trim(),\n      media: m[2].trim()\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n\n    if (!open()) return error(\"@page missing '{'\");\n    var decls = comments();\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@page missing '}'\");\n\n    return pos({\n      type: \"page\",\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = m[1].trim();\n    var doc = m[2].trim();\n\n    if (!open()) return error(\"@document missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@document missing '}'\");\n\n    return pos({\n      type: \"document\",\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse font-face.\n   */\n\n  function atfontface() {\n    var pos = position();\n    var m = match(/^@font-face\\s*/);\n    if (!m) return;\n\n    if (!open()) return error(\"@font-face missing '{'\");\n    var decls = comments();\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@font-face missing '}'\");\n\n    return pos({\n      type: \"font-face\",\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  var atimport = _compileAtrule(\"import\");\n\n  /**\n   * Parse charset\n   */\n\n  var atcharset = _compileAtrule(\"charset\");\n\n  /**\n   * Parse namespace\n   */\n\n  var atnamespace = _compileAtrule(\"namespace\");\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _compileAtrule(name) {\n    var re = new RegExp(\"^@\" + name + \"\\\\s*([^;]+);\");\n    return function() {\n      var pos = position();\n      var m = match(re);\n      if (!m) return;\n      var ret = { type: name };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    };\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    if (css[0] != \"@\") return;\n\n    return (\n      atkeyframes() ||\n      atmedia() ||\n      atcustommedia() ||\n      atsupports() ||\n      atimport() ||\n      atcharset() ||\n      atnamespace() ||\n      atdocument() ||\n      atpage() ||\n      athost() ||\n      atfontface()\n    );\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return error(\"selector missing\");\n    comments();\n\n    return pos({\n      type: \"rule\",\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return addParent(stylesheet());\n}\n\n/**\n * Adds non-enumerable parent node reference to each node.\n */\n\nfunction addParent(obj, parent) {\n  var isNode = obj && typeof obj.type === \"string\";\n  var childParent = isNode ? obj : parent;\n\n  for (var k in obj) {\n    var value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach(function(v) {\n        addParent(v, childParent);\n      });\n    } else if (value && typeof value === \"object\") {\n      addParent(value, childParent);\n    }\n  }\n\n  if (isNode) {\n    Object.defineProperty(obj, \"parent\", {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null\n    });\n  }\n\n  return obj;\n}\n","/*\n\nCode extracted from https://github.com/reworkcss/css\n\n\n\n(The MIT License)\n\nCopyright (c) 2012 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nconst compiler = {\n  compile(node) {\n    return this.stylesheet(node);\n  },\n  stylesheet(node) {\n    return this.mapVisit(node.stylesheet.rules);\n  },\n  mapVisit(nodes) {\n    return nodes.map(node => this[node.type](node)).join(\"\");\n  },\n  comment() {\n    return \"\";\n  },\n  import(node) {\n    return \"@import \" + node.import + \";\";\n  },\n  media({ media, rules }) {\n    const result = this.mapVisit(rules);\n    if (!result.length) return \"\";\n    return \"@media \" + media + \"{\" + result + \"}\";\n  },\n  document({ vendor, document, rules }) {\n    if (!rules.length) return \"\";\n    var doc = \"@\" + (vendor || \"\") + \"document \" + document;\n    return doc + (\" \" + \" {\") + this.mapVisit(rules) + \"}\";\n  },\n  charset({ charset }) {\n    return \"@charset \" + charset + \";\";\n  },\n  namespace({ namespace }) {\n    return \"@namespace \" + namespace + \";\";\n  },\n  supports({ supports, rules }) {\n    if (!rules.length) return \"\";\n    return \"@supports \" + supports + \" {\" + this.mapVisit(rules) + \"}\";\n  },\n  keyframes({ vendor = \"\", name, keyframes }) {\n    return (\n      \"@\" + vendor + \"keyframes \" + name + \" {\" + this.mapVisit(keyframes) + \"}\"\n    );\n  },\n  keyframe({ declarations, values }) {\n    return values.join(\", \") + \" {\" + this.mapVisit(declarations) + \"}\";\n  },\n  page({ selectors, declarations }) {\n    if (selectors.length == 0) return \"\";\n    var sel = selectors.length ? selectors.join(\", \") + \" \" : \"\";\n    return \"@page \" + sel + \"{\" + this.mapVisit(declarations) + \"}\";\n  },\n  \"font-face\"({ declarations }) {\n    return \"@font-face \" + \"{\" + this.mapVisit(declarations) + \"}\";\n  },\n  host({ rules }) {\n    if (!rules.length) return \"\";\n    return \"@host\" + \" {\" + this.mapVisit(rules) + \"}\";\n  },\n  \"custom-media\"({ name, media }) {\n    return \"@custom-media \" + name + \" \" + media + \";\";\n  },\n  rule({ declarations, selectors }) {\n    if (!declarations.length || !selectors.length) return \"\";\n    return selectors.join(\",\") + \"{\" + this.mapVisit(declarations) + \"}\";\n  },\n  declaration({ property, value }) {\n    return property + \": \" + value + \";\";\n  }\n};\n\nexport default node => compiler.compile(node);\n","const fs = require(\"fs\");\nimport glob from \"glob\";\n\nexport const concatFiles = (files, options) =>\n  files.reduce((total, file) => {\n    let code = \"\";\n    try {\n      code = fs.readFileSync(file, \"utf8\").toLowerCase();\n    } catch (e) {\n      console.warn(e.message);\n    }\n    return `${total}${code} `;\n  }, \"\");\n\nexport const getFilesFromPatternArray = fileArray => {\n  let sourceFiles = {};\n  for (let string of fileArray) {\n    try {\n      // See if string is a filepath, not a file pattern.\n      fs.statSync(string);\n      sourceFiles[string] = true;\n    } catch (e) {\n      const files = glob.sync(string);\n      files.forEach(file => {\n        sourceFiles[file] = true;\n      });\n    }\n  }\n  return Object.keys(sourceFiles);\n};\n\nexport const filesToSource = (files) => {\n  if (Array.isArray(files)) {\n    files = getFilesFromPatternArray(files);\n    return concatFiles(files, {});\n  }\n  // 'files' is already a source string.\n  return files;\n};\n\nexport default {\n  filesToSource\n};\n","import parse from \"./utils/parse\";\nimport compile from \"./utils/compile\";\nimport FileUtil from \"./utils/FileUtil\";\n\nconst RULE_TYPE = \"rule\";\nconst MEDIA_TYPE = \"media\";\nconst NON_ALPHA = /[^a-z]/g;\n\nconst getAllWordsInSelector = selector =>\n  selector\n    .replace(/\\[(.*?)\\]/g, \"\")\n    .replace(/[:*][a-z-_:]+/g, \"\")\n    .toLowerCase()\n    .match(/[a-z]+/g) || [];\n\nconst readRules = (rules, wordsInContent) => {\n  for (let rule of rules) {\n    if (rule.type === RULE_TYPE) {\n      rule.selectors = rule.selectors.filter(selector =>\n        getAllWordsInSelector(selector).every(word =>\n          wordsInContent.includes(word)\n        )\n      );\n    } else if (rule.type === MEDIA_TYPE) {\n      readRules(rule.rules, wordsInContent);\n    }\n  }\n};\n\nexport default (searchThrough, css, options = {}) => {\n  const whitelist = [\"html\", \"body\"].concat(options.whitelist || []);\n  const cssString = FileUtil.filesToSource(css);\n  const content = FileUtil.filesToSource(searchThrough).toLowerCase();\n  const wordsInContent = content.split(NON_ALPHA).concat(whitelist);\n\n  const ast = parse(cssString);\n  const rules = ast.stylesheet.rules;\n  readRules(rules, wordsInContent);\n\n  return compile(ast);\n};\n"],"names":["commentre","compiler","compile","node","this","stylesheet","mapVisit","rules","nodes","map","type","join","comment","import","media","ref","result","length","document","charset","namespace","supports","keyframes","vendor","keyframe","declarations","page","selectors","host","rule","declaration","fs","require","files","Array","isArray","options","reduce","total","file","code","readFileSync","toLowerCase","e","console","warn","message","concatFiles","fileArray","sourceFiles","let","string","statSync","glob","sync","forEach","Object","keys","getFilesFromPatternArray","NON_ALPHA","getAllWordsInSelector","selector","replace","match","readRules","wordsInContent","filter","every","word","includes","searchThrough","css","whitelist","concat","cssString","FileUtil","split","ast","lineno","column","updatePosition","str","lines","i","lastIndexOf","position","start","line","Position","whitespace","end","source","prototype","content","errorsList","error","msg","err","Error","reason","filename","silent","push","open","close","pos","sel","comments","charAt","atrule","re","m","exec","slice","c","trim","s","prop","val","ret","property","value","decl","decls","vals","values","atimport","_compileAtrule","atcharset","atnamespace","name","RegExp","frame","frames","atkeyframes","style","atmedia","atcustommedia","atsupports","doc","atdocument","atpage","athost","atfontface","addParent","obj","parent","isNode","childParent","k","v","defineProperty","configurable","writable","enumerable","parsingErrors","parse"],"mappings":"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"}